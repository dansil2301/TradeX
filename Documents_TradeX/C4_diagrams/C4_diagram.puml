@startuml
class Eco.TradeX.business.Impl.StrategiesService.RSI.RSIParameterContainer {
- BigDecimal RSI
}

class Eco.TradeX.business.Impl.StrategiesService.StrategyFactoryUseCaseImpl {
- List<StrategyUseCase> strategies
- ClientAPIRepository clientAPIRepository
+ List<String> getStrategiesNames()
+ List<StrategyUseCase> getStrategies(List<String>)
- void initializeStrategiesExtraCandles(List<StrategyUseCase>,Instant,String,CandleInterval)
+ List<CandleStrategiesParams> getCandlesStrategiesParameters(List<String>,List<CandleData>,Instant,String,CandleInterval)
}


class Eco.TradeX.business.Impl.StrategiesService.RSI.RSIContainerData {
- List<BigDecimal> gain
- List<BigDecimal> loss
+ void moveByOne(BigDecimal,BigDecimal)
}


class Eco.TradeX.business.Impl.StrategiesService.MA.MAParameterContainer {
- BigDecimal longMA
- BigDecimal shortMA
}

class Eco.TradeX.business.Impl.StrategiesService.MA.StrategyMAUseCaseImpl {
- ClientAPIRepository clientAPIRepository
- CandlesSeparationAndInitiation candlesSeparationAndInitiation
- MAContainerData maContainerData
- List<CandleData> extraCandlesContainer
- int extraCandlesNeeded
- int longMA
- int shortMA
+ String getStrategyName()
+ int getExtraCandlesNeeded()
+ void initializeContainerForCandleLiveStreaming(String,CandleInterval)
- MAContainerData initializeContainer(List<CandleData>)
+ ParameterContainer calculateParametersForCandle(CandleData)
+ void initializeExtraCandlesThroughFactory(List<CandleData>)
- List<ParameterContainer> initParamContainerInExtraCandlesShortageCase(List<ParameterContainer>,int)
+ List<ParameterContainer> getStrategyParametersForCandles(List<CandleData>,Instant,String,CandleInterval)
}


class Eco.TradeX.business.Impl.StrategiesService.RSI.StrategyRSIUseCaseImpl {
- ClientAPIRepository clientAPIRepository
- CandlesSeparationAndInitiation candlesSeparationAndInitiation
- RSIContainerData rsiContainerData
- List<CandleData> extraCandlesContainer
- CandleData prevCandleSaver
- int extraCandlesNeeded
- int periodMA
+ String getStrategyName()
+ int getExtraCandlesNeeded()
+ void initializeContainerForCandleLiveStreaming(String,CandleInterval)
- RSIContainerData initializeContainer(List<CandleData>)
- List<BigDecimal> getGainLossCurrentCandle(CandleData,CandleData)
+ ParameterContainer calculateParametersForCandle(CandleData)
+ void initializeExtraCandlesThroughFactory(List<CandleData>)
- List<ParameterContainer> initParamContainerInExtraCandlesShortageCase(List<ParameterContainer>,int)
+ List<ParameterContainer> getStrategyParametersForCandles(List<CandleData>,Instant,String,CandleInterval)
}


class Eco.TradeX.business.Impl.StrategiesService.MA.MAContainerData {
- List<BigDecimal> candlesCloseLong
+ void moveByOne(BigDecimal)
}




Eco.TradeX.business.Interfaces.StrategiesServiceinterfaces.ParameterContainer <|.. Eco.TradeX.business.Impl.StrategiesService.RSI.RSIParameterContainer
Eco.TradeX.business.Interfaces.StrategiesServiceinterfaces.StrategyFactoryUseCase <|.. Eco.TradeX.business.Impl.StrategiesService.StrategyFactoryUseCaseImpl
Eco.TradeX.business.Interfaces.StrategiesServiceinterfaces.ParameterContainer <|.. Eco.TradeX.business.Impl.StrategiesService.MA.MAParameterContainer
Eco.TradeX.business.Interfaces.StrategiesServiceinterfaces.StrategyUseCase <|.. Eco.TradeX.business.Impl.StrategiesService.MA.StrategyMAUseCaseImpl
Eco.TradeX.business.Interfaces.StrategiesServiceinterfaces.StrategyUseCase <|.. Eco.TradeX.business.Impl.StrategiesService.RSI.StrategyRSIUseCaseImpl
@enduml